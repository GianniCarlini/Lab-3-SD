// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: helloworld.proto

package helloworld

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//------------------------------
type CreateBRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comandob string `protobuf:"bytes,1,opt,name=comandob,proto3" json:"comandob,omitempty"`
}

func (x *CreateBRequest) Reset() {
	*x = CreateBRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBRequest) ProtoMessage() {}

func (x *CreateBRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBRequest.ProtoReflect.Descriptor instead.
func (*CreateBRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{0}
}

func (x *CreateBRequest) GetComandob() string {
	if x != nil {
		return x.Comandob
	}
	return ""
}

type CreateBReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipb      string `protobuf:"bytes,1,opt,name=ipb,proto3" json:"ipb,omitempty"`
	Contador int64  `protobuf:"varint,2,opt,name=contador,proto3" json:"contador,omitempty"`
}

func (x *CreateBReply) Reset() {
	*x = CreateBReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBReply) ProtoMessage() {}

func (x *CreateBReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBReply.ProtoReflect.Descriptor instead.
func (*CreateBReply) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBReply) GetIpb() string {
	if x != nil {
		return x.Ipb
	}
	return ""
}

func (x *CreateBReply) GetContador() int64 {
	if x != nil {
		return x.Contador
	}
	return 0
}

type CreateDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comandod string `protobuf:"bytes,1,opt,name=comandod,proto3" json:"comandod,omitempty"`
}

func (x *CreateDRequest) Reset() {
	*x = CreateDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDRequest) ProtoMessage() {}

func (x *CreateDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDRequest.ProtoReflect.Descriptor instead.
func (*CreateDRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDRequest) GetComandod() string {
	if x != nil {
		return x.Comandod
	}
	return ""
}

type CreateDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reloj []int64 `protobuf:"varint,1,rep,packed,name=reloj,proto3" json:"reloj,omitempty"`
}

func (x *CreateDReply) Reset() {
	*x = CreateDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDReply) ProtoMessage() {}

func (x *CreateDReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDReply.ProtoReflect.Descriptor instead.
func (*CreateDReply) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDReply) GetReloj() []int64 {
	if x != nil {
		return x.Reloj
	}
	return nil
}

//------------------------------
type ConnectCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comandoc string `protobuf:"bytes,1,opt,name=comandoc,proto3" json:"comandoc,omitempty"`
}

func (x *ConnectCRequest) Reset() {
	*x = ConnectCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectCRequest) ProtoMessage() {}

func (x *ConnectCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectCRequest.ProtoReflect.Descriptor instead.
func (*ConnectCRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{4}
}

func (x *ConnectCRequest) GetComandoc() string {
	if x != nil {
		return x.Comandoc
	}
	return ""
}

type ConnectCReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipc    string  `protobuf:"bytes,1,opt,name=ipc,proto3" json:"ipc,omitempty"`
	Relojc []int64 `protobuf:"varint,2,rep,packed,name=relojc,proto3" json:"relojc,omitempty"`
}

func (x *ConnectCReply) Reset() {
	*x = ConnectCReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectCReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectCReply) ProtoMessage() {}

func (x *ConnectCReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectCReply.ProtoReflect.Descriptor instead.
func (*ConnectCReply) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{5}
}

func (x *ConnectCReply) GetIpc() string {
	if x != nil {
		return x.Ipc
	}
	return ""
}

func (x *ConnectCReply) GetRelojc() []int64 {
	if x != nil {
		return x.Relojc
	}
	return nil
}

//------------------------------
type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comandoget string `protobuf:"bytes,1,opt,name=comandoget,proto3" json:"comandoget,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{6}
}

func (x *GetRequest) GetComandoget() string {
	if x != nil {
		return x.Comandoget
	}
	return ""
}

type GetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipget    string  `protobuf:"bytes,1,opt,name=ipget,proto3" json:"ipget,omitempty"`
	Relojget []int64 `protobuf:"varint,2,rep,packed,name=relojget,proto3" json:"relojget,omitempty"`
}

func (x *GetReply) Reset() {
	*x = GetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReply) ProtoMessage() {}

func (x *GetReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReply.ProtoReflect.Descriptor instead.
func (*GetReply) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{7}
}

func (x *GetReply) GetIpget() string {
	if x != nil {
		return x.Ipget
	}
	return ""
}

func (x *GetReply) GetRelojget() []int64 {
	if x != nil {
		return x.Relojget
	}
	return nil
}

//------------------------------
type MergeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peticionlog string `protobuf:"bytes,1,opt,name=peticionlog,proto3" json:"peticionlog,omitempty"`
}

func (x *MergeRequest) Reset() {
	*x = MergeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeRequest) ProtoMessage() {}

func (x *MergeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeRequest.ProtoReflect.Descriptor instead.
func (*MergeRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{8}
}

func (x *MergeRequest) GetPeticionlog() string {
	if x != nil {
		return x.Peticionlog
	}
	return ""
}

type MergeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logresp []byte `protobuf:"bytes,1,opt,name=logresp,proto3" json:"logresp,omitempty"`
}

func (x *MergeReply) Reset() {
	*x = MergeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeReply) ProtoMessage() {}

func (x *MergeReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeReply.ProtoReflect.Descriptor instead.
func (*MergeReply) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{9}
}

func (x *MergeReply) GetLogresp() []byte {
	if x != nil {
		return x.Logresp
	}
	return nil
}

//------------------------------
type PMergeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mergecito []string `protobuf:"bytes,1,rep,name=mergecito,proto3" json:"mergecito,omitempty"`
}

func (x *PMergeRequest) Reset() {
	*x = PMergeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PMergeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PMergeRequest) ProtoMessage() {}

func (x *PMergeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PMergeRequest.ProtoReflect.Descriptor instead.
func (*PMergeRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{10}
}

func (x *PMergeRequest) GetMergecito() []string {
	if x != nil {
		return x.Mergecito
	}
	return nil
}

type PMergeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mresp string `protobuf:"bytes,1,opt,name=mresp,proto3" json:"mresp,omitempty"`
}

func (x *PMergeReply) Reset() {
	*x = PMergeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PMergeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PMergeReply) ProtoMessage() {}

func (x *PMergeReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PMergeReply.ProtoReflect.Descriptor instead.
func (*PMergeReply) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{11}
}

func (x *PMergeReply) GetMresp() string {
	if x != nil {
		return x.Mresp
	}
	return ""
}

//------------------------------
type IpCambioRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cambio string `protobuf:"bytes,1,opt,name=cambio,proto3" json:"cambio,omitempty"`
}

func (x *IpCambioRequest) Reset() {
	*x = IpCambioRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpCambioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpCambioRequest) ProtoMessage() {}

func (x *IpCambioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpCambioRequest.ProtoReflect.Descriptor instead.
func (*IpCambioRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{12}
}

func (x *IpCambioRequest) GetCambio() string {
	if x != nil {
		return x.Cambio
	}
	return ""
}

type IpCambioReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recibido string `protobuf:"bytes,1,opt,name=recibido,proto3" json:"recibido,omitempty"`
}

func (x *IpCambioReply) Reset() {
	*x = IpCambioReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpCambioReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpCambioReply) ProtoMessage() {}

func (x *IpCambioReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpCambioReply.ProtoReflect.Descriptor instead.
func (*IpCambioReply) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{13}
}

func (x *IpCambioReply) GetRecibido() string {
	if x != nil {
		return x.Recibido
	}
	return ""
}

//------------------------------
type RelojCambioRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relojito []int64 `protobuf:"varint,1,rep,packed,name=relojito,proto3" json:"relojito,omitempty"`
	Domain   string  `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *RelojCambioRequest) Reset() {
	*x = RelojCambioRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelojCambioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelojCambioRequest) ProtoMessage() {}

func (x *RelojCambioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelojCambioRequest.ProtoReflect.Descriptor instead.
func (*RelojCambioRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{14}
}

func (x *RelojCambioRequest) GetRelojito() []int64 {
	if x != nil {
		return x.Relojito
	}
	return nil
}

func (x *RelojCambioRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type RelojCambioReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aviso string `protobuf:"bytes,1,opt,name=aviso,proto3" json:"aviso,omitempty"`
}

func (x *RelojCambioReply) Reset() {
	*x = RelojCambioReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelojCambioReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelojCambioReply) ProtoMessage() {}

func (x *RelojCambioReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelojCambioReply.ProtoReflect.Descriptor instead.
func (*RelojCambioReply) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{15}
}

func (x *RelojCambioReply) GetAviso() string {
	if x != nil {
		return x.Aviso
	}
	return ""
}

var File_helloworld_proto protoreflect.FileDescriptor

var file_helloworld_proto_rawDesc = []byte{
	0x0a, 0x10, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x22, 0x2c,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x62, 0x22, 0x3c, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x70, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x62, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x64, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x64, 0x6f, 0x72, 0x22, 0x2c, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x64, 0x22, 0x24, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x6c, 0x6f,
	0x6a, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x72, 0x65, 0x6c, 0x6f, 0x6a, 0x22, 0x2d,
	0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x63, 0x22, 0x39, 0x0a,
	0x0d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x70, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x63,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6c, 0x6f, 0x6a, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x65, 0x6c, 0x6f, 0x6a, 0x63, 0x22, 0x2c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x61, 0x6e, 0x64,
	0x6f, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x61,
	0x6e, 0x64, 0x6f, 0x67, 0x65, 0x74, 0x22, 0x3c, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x70, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x70, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x6f,
	0x6a, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x6f,
	0x6a, 0x67, 0x65, 0x74, 0x22, 0x30, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x74, 0x69, 0x63, 0x69, 0x6f, 0x6e,
	0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x74, 0x69, 0x63,
	0x69, 0x6f, 0x6e, 0x6c, 0x6f, 0x67, 0x22, 0x26, 0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x70, 0x22, 0x2d,
	0x0a, 0x0d, 0x50, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x63, 0x69, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x63, 0x69, 0x74, 0x6f, 0x22, 0x23, 0x0a,
	0x0b, 0x50, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x72, 0x65,
	0x73, 0x70, 0x22, 0x29, 0x0a, 0x0f, 0x49, 0x70, 0x43, 0x61, 0x6d, 0x62, 0x69, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x62, 0x69, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x62, 0x69, 0x6f, 0x22, 0x2b, 0x0a,
	0x0d, 0x49, 0x70, 0x43, 0x61, 0x6d, 0x62, 0x69, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x63, 0x69, 0x62, 0x69, 0x64, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x69, 0x62, 0x69, 0x64, 0x6f, 0x22, 0x48, 0x0a, 0x12, 0x52, 0x65,
	0x6c, 0x6f, 0x6a, 0x43, 0x61, 0x6d, 0x62, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x6f, 0x6a, 0x69, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x6f, 0x6a, 0x69, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x22, 0x28, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x6f, 0x6a, 0x43, 0x61, 0x6d,
	0x62, 0x69, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x76, 0x69, 0x73,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x76, 0x69, 0x73, 0x6f, 0x32, 0x9f,
	0x04, 0x0a, 0x04, 0x43, 0x72, 0x75, 0x64, 0x12, 0x41, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x12, 0x1a, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x07, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x12, 0x1a, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a,
	0x08, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x12, 0x1b, 0x2e, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x05, 0x4d, 0x65,
	0x72, 0x67, 0x65, 0x12, 0x18, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x06, 0x50, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x12, 0x19, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x50,
	0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x50, 0x4d, 0x65, 0x72, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x08, 0x49, 0x70, 0x43, 0x61, 0x6d,
	0x62, 0x69, 0x6f, 0x12, 0x1b, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x49, 0x70, 0x43, 0x61, 0x6d, 0x62, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x49, 0x70,
	0x43, 0x61, 0x6d, 0x62, 0x69, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a,
	0x0b, 0x52, 0x65, 0x6c, 0x6f, 0x6a, 0x43, 0x61, 0x6d, 0x62, 0x69, 0x6f, 0x12, 0x1e, 0x2e, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x52, 0x65, 0x6c, 0x6f, 0x6a, 0x43,
	0x61, 0x6d, 0x62, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x52, 0x65, 0x6c, 0x6f, 0x6a, 0x43,
	0x61, 0x6d, 0x62, 0x69, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_helloworld_proto_rawDescOnce sync.Once
	file_helloworld_proto_rawDescData = file_helloworld_proto_rawDesc
)

func file_helloworld_proto_rawDescGZIP() []byte {
	file_helloworld_proto_rawDescOnce.Do(func() {
		file_helloworld_proto_rawDescData = protoimpl.X.CompressGZIP(file_helloworld_proto_rawDescData)
	})
	return file_helloworld_proto_rawDescData
}

var file_helloworld_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_helloworld_proto_goTypes = []interface{}{
	(*CreateBRequest)(nil),     // 0: helloworld.CreateBRequest
	(*CreateBReply)(nil),       // 1: helloworld.CreateBReply
	(*CreateDRequest)(nil),     // 2: helloworld.CreateDRequest
	(*CreateDReply)(nil),       // 3: helloworld.CreateDReply
	(*ConnectCRequest)(nil),    // 4: helloworld.ConnectCRequest
	(*ConnectCReply)(nil),      // 5: helloworld.ConnectCReply
	(*GetRequest)(nil),         // 6: helloworld.GetRequest
	(*GetReply)(nil),           // 7: helloworld.GetReply
	(*MergeRequest)(nil),       // 8: helloworld.MergeRequest
	(*MergeReply)(nil),         // 9: helloworld.MergeReply
	(*PMergeRequest)(nil),      // 10: helloworld.PMergeRequest
	(*PMergeReply)(nil),        // 11: helloworld.PMergeReply
	(*IpCambioRequest)(nil),    // 12: helloworld.IpCambioRequest
	(*IpCambioReply)(nil),      // 13: helloworld.IpCambioReply
	(*RelojCambioRequest)(nil), // 14: helloworld.RelojCambioRequest
	(*RelojCambioReply)(nil),   // 15: helloworld.RelojCambioReply
}
var file_helloworld_proto_depIdxs = []int32{
	0,  // 0: helloworld.Crud.CreateB:input_type -> helloworld.CreateBRequest
	2,  // 1: helloworld.Crud.CreateD:input_type -> helloworld.CreateDRequest
	4,  // 2: helloworld.Crud.ConnectC:input_type -> helloworld.ConnectCRequest
	6,  // 3: helloworld.Crud.Get:input_type -> helloworld.GetRequest
	8,  // 4: helloworld.Crud.Merge:input_type -> helloworld.MergeRequest
	10, // 5: helloworld.Crud.PMerge:input_type -> helloworld.PMergeRequest
	12, // 6: helloworld.Crud.IpCambio:input_type -> helloworld.IpCambioRequest
	14, // 7: helloworld.Crud.RelojCambio:input_type -> helloworld.RelojCambioRequest
	1,  // 8: helloworld.Crud.CreateB:output_type -> helloworld.CreateBReply
	3,  // 9: helloworld.Crud.CreateD:output_type -> helloworld.CreateDReply
	5,  // 10: helloworld.Crud.ConnectC:output_type -> helloworld.ConnectCReply
	7,  // 11: helloworld.Crud.Get:output_type -> helloworld.GetReply
	9,  // 12: helloworld.Crud.Merge:output_type -> helloworld.MergeReply
	11, // 13: helloworld.Crud.PMerge:output_type -> helloworld.PMergeReply
	13, // 14: helloworld.Crud.IpCambio:output_type -> helloworld.IpCambioReply
	15, // 15: helloworld.Crud.RelojCambio:output_type -> helloworld.RelojCambioReply
	8,  // [8:16] is the sub-list for method output_type
	0,  // [0:8] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_helloworld_proto_init() }
func file_helloworld_proto_init() {
	if File_helloworld_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_helloworld_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectCReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PMergeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PMergeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpCambioRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpCambioReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelojCambioRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelojCambioReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_helloworld_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_helloworld_proto_goTypes,
		DependencyIndexes: file_helloworld_proto_depIdxs,
		MessageInfos:      file_helloworld_proto_msgTypes,
	}.Build()
	File_helloworld_proto = out.File
	file_helloworld_proto_rawDesc = nil
	file_helloworld_proto_goTypes = nil
	file_helloworld_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CrudClient is the client API for Crud service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CrudClient interface {
	CreateB(ctx context.Context, in *CreateBRequest, opts ...grpc.CallOption) (*CreateBReply, error)
	CreateD(ctx context.Context, in *CreateDRequest, opts ...grpc.CallOption) (*CreateDReply, error)
	ConnectC(ctx context.Context, in *ConnectCRequest, opts ...grpc.CallOption) (*ConnectCReply, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetReply, error)
	Merge(ctx context.Context, in *MergeRequest, opts ...grpc.CallOption) (*MergeReply, error)
	PMerge(ctx context.Context, in *PMergeRequest, opts ...grpc.CallOption) (*PMergeReply, error)
	IpCambio(ctx context.Context, in *IpCambioRequest, opts ...grpc.CallOption) (*IpCambioReply, error)
	RelojCambio(ctx context.Context, opts ...grpc.CallOption) (Crud_RelojCambioClient, error)
}

type crudClient struct {
	cc grpc.ClientConnInterface
}

func NewCrudClient(cc grpc.ClientConnInterface) CrudClient {
	return &crudClient{cc}
}

func (c *crudClient) CreateB(ctx context.Context, in *CreateBRequest, opts ...grpc.CallOption) (*CreateBReply, error) {
	out := new(CreateBReply)
	err := c.cc.Invoke(ctx, "/helloworld.Crud/CreateB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudClient) CreateD(ctx context.Context, in *CreateDRequest, opts ...grpc.CallOption) (*CreateDReply, error) {
	out := new(CreateDReply)
	err := c.cc.Invoke(ctx, "/helloworld.Crud/CreateD", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudClient) ConnectC(ctx context.Context, in *ConnectCRequest, opts ...grpc.CallOption) (*ConnectCReply, error) {
	out := new(ConnectCReply)
	err := c.cc.Invoke(ctx, "/helloworld.Crud/ConnectC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetReply, error) {
	out := new(GetReply)
	err := c.cc.Invoke(ctx, "/helloworld.Crud/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudClient) Merge(ctx context.Context, in *MergeRequest, opts ...grpc.CallOption) (*MergeReply, error) {
	out := new(MergeReply)
	err := c.cc.Invoke(ctx, "/helloworld.Crud/Merge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudClient) PMerge(ctx context.Context, in *PMergeRequest, opts ...grpc.CallOption) (*PMergeReply, error) {
	out := new(PMergeReply)
	err := c.cc.Invoke(ctx, "/helloworld.Crud/PMerge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudClient) IpCambio(ctx context.Context, in *IpCambioRequest, opts ...grpc.CallOption) (*IpCambioReply, error) {
	out := new(IpCambioReply)
	err := c.cc.Invoke(ctx, "/helloworld.Crud/IpCambio", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudClient) RelojCambio(ctx context.Context, opts ...grpc.CallOption) (Crud_RelojCambioClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Crud_serviceDesc.Streams[0], "/helloworld.Crud/RelojCambio", opts...)
	if err != nil {
		return nil, err
	}
	x := &crudRelojCambioClient{stream}
	return x, nil
}

type Crud_RelojCambioClient interface {
	Send(*RelojCambioRequest) error
	Recv() (*RelojCambioReply, error)
	grpc.ClientStream
}

type crudRelojCambioClient struct {
	grpc.ClientStream
}

func (x *crudRelojCambioClient) Send(m *RelojCambioRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *crudRelojCambioClient) Recv() (*RelojCambioReply, error) {
	m := new(RelojCambioReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CrudServer is the server API for Crud service.
type CrudServer interface {
	CreateB(context.Context, *CreateBRequest) (*CreateBReply, error)
	CreateD(context.Context, *CreateDRequest) (*CreateDReply, error)
	ConnectC(context.Context, *ConnectCRequest) (*ConnectCReply, error)
	Get(context.Context, *GetRequest) (*GetReply, error)
	Merge(context.Context, *MergeRequest) (*MergeReply, error)
	PMerge(context.Context, *PMergeRequest) (*PMergeReply, error)
	IpCambio(context.Context, *IpCambioRequest) (*IpCambioReply, error)
	RelojCambio(Crud_RelojCambioServer) error
}

// UnimplementedCrudServer can be embedded to have forward compatible implementations.
type UnimplementedCrudServer struct {
}

func (*UnimplementedCrudServer) CreateB(context.Context, *CreateBRequest) (*CreateBReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateB not implemented")
}
func (*UnimplementedCrudServer) CreateD(context.Context, *CreateDRequest) (*CreateDReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateD not implemented")
}
func (*UnimplementedCrudServer) ConnectC(context.Context, *ConnectCRequest) (*ConnectCReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConnectC not implemented")
}
func (*UnimplementedCrudServer) Get(context.Context, *GetRequest) (*GetReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedCrudServer) Merge(context.Context, *MergeRequest) (*MergeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Merge not implemented")
}
func (*UnimplementedCrudServer) PMerge(context.Context, *PMergeRequest) (*PMergeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PMerge not implemented")
}
func (*UnimplementedCrudServer) IpCambio(context.Context, *IpCambioRequest) (*IpCambioReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IpCambio not implemented")
}
func (*UnimplementedCrudServer) RelojCambio(Crud_RelojCambioServer) error {
	return status.Errorf(codes.Unimplemented, "method RelojCambio not implemented")
}

func RegisterCrudServer(s *grpc.Server, srv CrudServer) {
	s.RegisterService(&_Crud_serviceDesc, srv)
}

func _Crud_CreateB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudServer).CreateB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.Crud/CreateB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrudServer).CreateB(ctx, req.(*CreateBRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Crud_CreateD_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudServer).CreateD(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.Crud/CreateD",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrudServer).CreateD(ctx, req.(*CreateDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Crud_ConnectC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudServer).ConnectC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.Crud/ConnectC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrudServer).ConnectC(ctx, req.(*ConnectCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Crud_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.Crud/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrudServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Crud_Merge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MergeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudServer).Merge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.Crud/Merge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrudServer).Merge(ctx, req.(*MergeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Crud_PMerge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PMergeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudServer).PMerge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.Crud/PMerge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrudServer).PMerge(ctx, req.(*PMergeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Crud_IpCambio_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IpCambioRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudServer).IpCambio(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.Crud/IpCambio",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrudServer).IpCambio(ctx, req.(*IpCambioRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Crud_RelojCambio_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CrudServer).RelojCambio(&crudRelojCambioServer{stream})
}

type Crud_RelojCambioServer interface {
	Send(*RelojCambioReply) error
	Recv() (*RelojCambioRequest, error)
	grpc.ServerStream
}

type crudRelojCambioServer struct {
	grpc.ServerStream
}

func (x *crudRelojCambioServer) Send(m *RelojCambioReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *crudRelojCambioServer) Recv() (*RelojCambioRequest, error) {
	m := new(RelojCambioRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Crud_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helloworld.Crud",
	HandlerType: (*CrudServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateB",
			Handler:    _Crud_CreateB_Handler,
		},
		{
			MethodName: "CreateD",
			Handler:    _Crud_CreateD_Handler,
		},
		{
			MethodName: "ConnectC",
			Handler:    _Crud_ConnectC_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Crud_Get_Handler,
		},
		{
			MethodName: "Merge",
			Handler:    _Crud_Merge_Handler,
		},
		{
			MethodName: "PMerge",
			Handler:    _Crud_PMerge_Handler,
		},
		{
			MethodName: "IpCambio",
			Handler:    _Crud_IpCambio_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RelojCambio",
			Handler:       _Crud_RelojCambio_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "helloworld.proto",
}
